import{_ as e,o as a,c as l,a2 as t}from"./chunks/framework.CAv1dD81.js";const p=JSON.parse(`{"title":"Checklist d'Accessibilité","description":"","frontmatter":{},"headers":[],"relativePath":"guide/checklist.md","filePath":"guide/checklist.md"}`),s={name:"guide/checklist.md"};function r(n,i,o,u,c,d){return a(),l("div",null,i[0]||(i[0]=[t(`<h1 id="checklist-d-accessibilite" tabindex="-1">Checklist d&#39;Accessibilité <a class="header-anchor" href="#checklist-d-accessibilite" aria-label="Permalink to &quot;Checklist d&#39;Accessibilité&quot;">​</a></h1><h2 id="navigation-et-structure" tabindex="-1">Navigation et Structure <a class="header-anchor" href="#navigation-et-structure" aria-label="Permalink to &quot;Navigation et Structure&quot;">​</a></h2><h3 id="🔍-structure-html" tabindex="-1">🔍 Structure HTML <a class="header-anchor" href="#🔍-structure-html" aria-label="Permalink to &quot;🔍 Structure HTML&quot;">​</a></h3><ul><li>[ ] Balisage sémantique utilisé (<code>header</code>, <code>main</code>, <code>nav</code>, <code>footer</code>, etc.)</li><li>[ ] Hiérarchie des titres cohérente (H1-H6)</li><li>[ ] Landmarks ARIA appropriés</li><li>[ ] Skip links présents</li><li>[ ] Attribut <code>lang</code> sur le <code>html</code></li><li>[ ] Pas d&#39;overlaps visuels entre les éléments avec le zoom à 200%</li></ul><h3 id="⌨️-navigation-au-clavier" tabindex="-1">⌨️ Navigation au clavier <a class="header-anchor" href="#⌨️-navigation-au-clavier" aria-label="Permalink to &quot;⌨️ Navigation au clavier&quot;">​</a></h3><ul><li>[ ] Focus visible sur tous les éléments interactifs</li><li>[ ] Ordre de tabulation logique</li><li>[ ] Pas de piège au clavier</li><li>[ ] Raccourcis clavier documentés</li></ul><h2 id="contenu" tabindex="-1">Contenu <a class="header-anchor" href="#contenu" aria-label="Permalink to &quot;Contenu&quot;">​</a></h2><h3 id="📝-texte" tabindex="-1">📝 Texte <a class="header-anchor" href="#📝-texte" aria-label="Permalink to &quot;📝 Texte&quot;">​</a></h3><ul><li>[ ] Contraste suffisant (4.5:1 minimum)</li><li>[ ] Taille de police ajustable</li><li>[ ] Interlignage suffisant</li><li>[ ] Alignement à gauche par défaut</li></ul><h3 id="🖼️-images" tabindex="-1">🖼️ Images <a class="header-anchor" href="#🖼️-images" aria-label="Permalink to &quot;🖼️ Images&quot;">​</a></h3><ul><li>[ ] Alternatives textuelles pour toutes les images informatives</li><li>[ ] Images décoratives marquées appropriément</li><li>[ ] Texte alternatif pertinent et concis</li><li>[ ] Description détaillée pour les images complexes</li></ul><h3 id="📋-formulaires" tabindex="-1">📋 Formulaires <a class="header-anchor" href="#📋-formulaires" aria-label="Permalink to &quot;📋 Formulaires&quot;">​</a></h3><ul><li>[ ] Labels associés aux champs</li><li>[ ] Instructions claires</li><li>[ ] Messages d&#39;erreur explicites</li><li>[ ] Groupement logique des champs</li><li>[ ] Validation accessible</li></ul><h2 id="multimedia" tabindex="-1">Multimédia <a class="header-anchor" href="#multimedia" aria-label="Permalink to &quot;Multimédia&quot;">​</a></h2><h3 id="🎥-video" tabindex="-1">🎥 Vidéo <a class="header-anchor" href="#🎥-video" aria-label="Permalink to &quot;🎥 Vidéo&quot;">​</a></h3><ul><li>[ ] Sous-titres pour les contenus audio</li><li>[ ] Transcription textuelle disponible</li><li>[ ] Contrôles de lecture accessibles</li><li>[ ] Pas de lecture automatique</li></ul><h3 id="🔊-audio" tabindex="-1">🔊 Audio <a class="header-anchor" href="#🔊-audio" aria-label="Permalink to &quot;🔊 Audio&quot;">​</a></h3><ul><li>[ ] Transcription textuelle</li><li>[ ] Contrôle du volume</li><li>[ ] Pas de son automatique</li></ul><h2 id="technique" tabindex="-1">Technique <a class="header-anchor" href="#technique" aria-label="Permalink to &quot;Technique&quot;">​</a></h2><h3 id="💻-code" tabindex="-1">💻 Code <a class="header-anchor" href="#💻-code" aria-label="Permalink to &quot;💻 Code&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Exemple de vérification --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aria-expanded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aria-controls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;menu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Menu&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="🔍-tests" tabindex="-1">🔍 Tests <a class="header-anchor" href="#🔍-tests" aria-label="Permalink to &quot;🔍 Tests&quot;">​</a></h3><ul><li>[ ] Validation W3C</li><li>[ ] Tests avec lecteur d&#39;écran</li><li>[ ] Tests de contraste</li><li>[ ] Tests responsifs</li></ul><h2 id="guide-d-utilisation-de-la-checklist" tabindex="-1">Guide d&#39;utilisation de la checklist <a class="header-anchor" href="#guide-d-utilisation-de-la-checklist" aria-label="Permalink to &quot;Guide d&#39;utilisation de la checklist&quot;">​</a></h2><ol><li><p><strong>Avant le développement</strong></p><ul><li>Revoir les exigences d&#39;accessibilité</li><li>Planifier la structure</li><li>Identifier les points critiques</li></ul></li><li><p><strong>Pendant le développement</strong></p><ul><li>Vérifier chaque point au fur et à mesure</li><li>Tester régulièrement</li><li>Documenter les choix</li></ul></li><li><p><strong>Après le développement</strong></p><ul><li>Audit complet</li><li>Tests utilisateurs</li><li>Corrections et ajustements</li></ul></li></ol>`,25)]))}const m=e(s,[["render",r]]);export{p as __pageData,m as default};
